// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: ssXJzNt8MiEu8LBoGu8nv3
// Component: BUOaf7HbR8

import * as React from 'react';

import * as p from '@plasmicapp/react-web';
import * as ph from '@plasmicapp/react-web/lib/host';

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants,
} from '@plasmicapp/react-web';

import '@plasmicapp/react-web/lib/plasmic.css';

import projectcss from './plasmic_scratch_pad.module.css'; // plasmic-import: ssXJzNt8MiEu8LBoGu8nv3/projectcss
import sty from './PlasmicTiles1BannerImg.module.css'; // plasmic-import: BUOaf7HbR8/css

import Ellipse605Icon from './icons/PlasmicIcon__Ellipse605'; // plasmic-import: VDvSxJSxchNT/icon
import OutlineShapeIcon from './icons/PlasmicIcon__OutlineShape'; // plasmic-import: 12UNjbHiXE/icon
import Vector2Icon from './icons/PlasmicIcon__Vector2'; // plasmic-import: UCtJPQIYdx/icon
import Vector3Icon from './icons/PlasmicIcon__Vector3'; // plasmic-import: n1FUZ_suKf/icon
import Vector4Icon from './icons/PlasmicIcon__Vector4'; // plasmic-import: d7O7vb2RCzt/icon
import Vector5Icon from './icons/PlasmicIcon__Vector5'; // plasmic-import: JiaKOhA6iKz/icon
import Vector6Icon from './icons/PlasmicIcon__Vector6'; // plasmic-import: 3UCH8qHsQt4/icon
import Vector7Icon from './icons/PlasmicIcon__Vector7'; // plasmic-import: D1U_c26PyM-/icon
import Vector8Icon from './icons/PlasmicIcon__Vector8'; // plasmic-import: xx0Qza-i-M4/icon
import Vector9Icon from './icons/PlasmicIcon__Vector9'; // plasmic-import: q26daoa3_QU/icon
import BlueBgIcon from './icons/PlasmicIcon__BlueBg'; // plasmic-import: FFTjL-5dvh1/icon
import StarsIcon from './icons/PlasmicIcon__Stars'; // plasmic-import: pgm7yIShPmq/icon
import Vector10Icon from './icons/PlasmicIcon__Vector10'; // plasmic-import: E15_acj7BCB/icon
import Vector11Icon from './icons/PlasmicIcon__Vector11'; // plasmic-import: IAsfMOG2LqL/icon
import Vector12Icon from './icons/PlasmicIcon__Vector12'; // plasmic-import: FSrWvvzEQJr/icon
import Vector13Icon from './icons/PlasmicIcon__Vector13'; // plasmic-import: ZEiPz88nI-D/icon
import Vector14Icon from './icons/PlasmicIcon__Vector14'; // plasmic-import: Q1baADxqZF9/icon
import Vector15Icon from './icons/PlasmicIcon__Vector15'; // plasmic-import: 3v0K5KEpAPv/icon
import Vector16Icon from './icons/PlasmicIcon__Vector16'; // plasmic-import: lFXuz7CKDdg/icon
import Vector17Icon from './icons/PlasmicIcon__Vector17'; // plasmic-import: eHCPg4zlql9/icon
import Vector18Icon from './icons/PlasmicIcon__Vector18'; // plasmic-import: 8wJhy00-RoO/icon
import UnionIcon from './icons/PlasmicIcon__Union'; // plasmic-import: taPEBKUl0ZX/icon
import Vector19Icon from './icons/PlasmicIcon__Vector19'; // plasmic-import: M7uA-WL6QQV/icon
import GroupIcon from './icons/PlasmicIcon__Group'; // plasmic-import: aRf5_lZomfq/icon
import Vector20Icon from './icons/PlasmicIcon__Vector20'; // plasmic-import: HIfM0KZLaR9/icon
import Vector21Icon from './icons/PlasmicIcon__Vector21'; // plasmic-import: JZBSzzhXPuL/icon
import stockAndBondsN78T6HlmFp from './images/stockAndBonds.svg'; // plasmic-import: N78T6HLMFp/picture
import bigLifeChangesNz9TwZmz1O from './images/bigLifeChanges.svg'; // plasmic-import: nz9TwZmz1o/picture
import maskGroup2Y74XBgUjxS from './images/maskGroup.svg'; // plasmic-import: 2y74xBGUjxS/picture
import dollars6SKOqwBPzZe from './images/dollars.svg'; // plasmic-import: 6sKOqwBPzZE/picture
import maskGroup2PsBByESnym from './images/maskGroup2.svg'; // plasmic-import: PsBByE_SNYM/picture

export type PlasmicTiles1BannerImg__VariantMembers = {};
export type PlasmicTiles1BannerImg__VariantsArgs = {};
type VariantPropType = keyof PlasmicTiles1BannerImg__VariantsArgs;
export const PlasmicTiles1BannerImg__VariantProps =
  new Array<VariantPropType>();

export type PlasmicTiles1BannerImg__ArgsType = {};
type ArgPropType = keyof PlasmicTiles1BannerImg__ArgsType;
export const PlasmicTiles1BannerImg__ArgProps = new Array<ArgPropType>();

export type PlasmicTiles1BannerImg__OverridesType = {
  root?: p.Flex<'div'>;
  taxBreaks1?: p.Flex<'div'>;
  otherStuff?: p.Flex<'div'>;
  yourCar?: p.Flex<'div'>;
  ladyAndMask?: p.Flex<'div'>;
};

export interface DefaultTiles1BannerImgProps {
  className?: string;
}

const __wrapUserFunction =
  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn());
const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise;
  });

function PlasmicTiles1BannerImg__RenderFunc(props: {
  variants: PlasmicTiles1BannerImg__VariantsArgs;
  args: PlasmicTiles1BannerImg__ArgsType;
  overrides: PlasmicTiles1BannerImg__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants,
  };
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = p.useCurrentUser?.() || {};
  const [$queries, setDollarQueries] = React.useState({});

  return (
    <div
      data-plasmic-name={'root'}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        sty.root,
      )}
    >
      <div
        data-plasmic-name={'taxBreaks1'}
        data-plasmic-override={overrides.taxBreaks1}
        className={classNames(projectcss.all, sty.taxBreaks1)}
      >
        <Ellipse605Icon
          className={classNames(projectcss.all, sty.svg__gRAkf)}
          role={'img'}
        />

        <div
          data-plasmic-name={'otherStuff'}
          data-plasmic-override={overrides.otherStuff}
          className={classNames(projectcss.all, sty.otherStuff)}
        >
          <OutlineShapeIcon
            className={classNames(projectcss.all, sty.svg__kbpD5)}
            role={'img'}
          />

          <img
            alt={''}
            className={classNames(
              projectcss.all,
              projectcss.img,
              sty.img__aiOr,
            )}
            src={stockAndBondsN78T6HlmFp}
          />

          <img
            alt={''}
            className={classNames(
              projectcss.all,
              projectcss.img,
              sty.img___7I4Tw,
            )}
            src={bigLifeChangesNz9TwZmz1O}
          />

          <div
            data-plasmic-name={'yourCar'}
            data-plasmic-override={overrides.yourCar}
            className={classNames(projectcss.all, sty.yourCar)}
          >
            <Vector2Icon
              className={classNames(projectcss.all, sty.svg__e6VSp)}
              role={'img'}
            />

            <Vector3Icon
              className={classNames(projectcss.all, sty.svg__eu4Jc)}
              role={'img'}
            />

            <Vector4Icon
              className={classNames(projectcss.all, sty.svg__m5P6R)}
              role={'img'}
            />

            <img
              alt={''}
              className={classNames(
                projectcss.all,
                projectcss.img,
                sty.img__j5LoP,
              )}
              src={maskGroup2Y74XBgUjxS}
            />

            <Vector5Icon
              className={classNames(projectcss.all, sty.svg__fdcv8)}
              role={'img'}
            />

            <Vector6Icon
              className={classNames(projectcss.all, sty.svg__aOL2)}
              role={'img'}
            />

            <Vector5Icon
              className={classNames(projectcss.all, sty.svg__f20H)}
              role={'img'}
            />

            <Vector7Icon
              className={classNames(projectcss.all, sty.svg__kruM4)}
              role={'img'}
            />

            <Vector7Icon
              className={classNames(projectcss.all, sty.svg__tRq7B)}
              role={'img'}
            />

            <Vector8Icon
              className={classNames(projectcss.all, sty.svg__jfcpf)}
              role={'img'}
            />

            <Vector9Icon
              className={classNames(projectcss.all, sty.svg__jpWn7)}
              role={'img'}
            />
          </div>
          <BlueBgIcon
            className={classNames(projectcss.all, sty.svg__kP0Di)}
            role={'img'}
          />

          <StarsIcon
            className={classNames(projectcss.all, sty.svg__ucNu2)}
            role={'img'}
          />

          <img
            alt={''}
            className={classNames(
              projectcss.all,
              projectcss.img,
              sty.img__pI6Me,
            )}
            src={dollars6SKOqwBPzZe}
          />
        </div>
        <div
          data-plasmic-name={'ladyAndMask'}
          data-plasmic-override={overrides.ladyAndMask}
          className={classNames(projectcss.all, sty.ladyAndMask)}
        >
          <img
            alt={''}
            className={classNames(
              projectcss.all,
              projectcss.img,
              sty.img__wpczk,
            )}
            src={maskGroup2PsBByESnym}
          />

          <Vector10Icon
            className={classNames(projectcss.all, sty.svg__o8I33)}
            role={'img'}
          />

          <Vector11Icon
            className={classNames(projectcss.all, sty.svg__dkMV)}
            role={'img'}
          />

          <Vector12Icon
            className={classNames(projectcss.all, sty.svg__bjCls)}
            role={'img'}
          />

          <Vector13Icon
            className={classNames(projectcss.all, sty.svg__vzfoc)}
            role={'img'}
          />

          <Vector14Icon
            className={classNames(projectcss.all, sty.svg__kiM8)}
            role={'img'}
          />

          <Vector15Icon
            className={classNames(projectcss.all, sty.svg__oa9St)}
            role={'img'}
          />

          <Vector16Icon
            className={classNames(projectcss.all, sty.svg___4Bws)}
            role={'img'}
          />

          <Vector17Icon
            className={classNames(projectcss.all, sty.svg__jbBf5)}
            role={'img'}
          />

          <Vector18Icon
            className={classNames(projectcss.all, sty.svg___65B)}
            role={'img'}
          />

          <UnionIcon
            className={classNames(projectcss.all, sty.svg___187Cw)}
            role={'img'}
          />

          <Vector19Icon
            className={classNames(projectcss.all, sty.svg__wy9A)}
            role={'img'}
          />

          <GroupIcon
            className={classNames(projectcss.all, sty.svg__u4Szd)}
            role={'img'}
          />

          <Vector20Icon
            className={classNames(projectcss.all, sty.svg__keZb9)}
            role={'img'}
          />

          <Vector21Icon
            className={classNames(projectcss.all, sty.svg__zYKa)}
            role={'img'}
          />
        </div>
      </div>
    </div>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ['root', 'taxBreaks1', 'otherStuff', 'yourCar', 'ladyAndMask'],
  taxBreaks1: ['taxBreaks1', 'otherStuff', 'yourCar', 'ladyAndMask'],
  otherStuff: ['otherStuff', 'yourCar'],
  yourCar: ['yourCar'],
  ladyAndMask: ['ladyAndMask'],
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: 'div';
  taxBreaks1: 'div';
  otherStuff: 'div';
  yourCar: 'div';
  ladyAndMask: 'div';
};

type ReservedPropsType = 'variants' | 'args' | 'overrides';
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicTiles1BannerImg__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicTiles1BannerImg__VariantsArgs;
    args?: PlasmicTiles1BannerImg__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicTiles1BannerImg__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicTiles1BannerImg__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>,
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicTiles1BannerImg__ArgProps,
          internalVariantPropNames: PlasmicTiles1BannerImg__VariantProps,
        }),
      [props, nodeName],
    );
    return PlasmicTiles1BannerImg__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName,
    });
  };
  if (nodeName === 'root') {
    func.displayName = 'PlasmicTiles1BannerImg';
  } else {
    func.displayName = `PlasmicTiles1BannerImg.${nodeName}`;
  }
  return func;
}

export const PlasmicTiles1BannerImg = Object.assign(
  // Top-level PlasmicTiles1BannerImg renders the root element
  makeNodeComponent('root'),
  {
    // Helper components rendering sub-elements
    taxBreaks1: makeNodeComponent('taxBreaks1'),
    otherStuff: makeNodeComponent('otherStuff'),
    yourCar: makeNodeComponent('yourCar'),
    ladyAndMask: makeNodeComponent('ladyAndMask'),

    // Metadata about props expected for PlasmicTiles1BannerImg
    internalVariantProps: PlasmicTiles1BannerImg__VariantProps,
    internalArgProps: PlasmicTiles1BannerImg__ArgProps,
  },
);

export default PlasmicTiles1BannerImg;
/* prettier-ignore-end */
